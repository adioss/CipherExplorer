package com.adioss.security.model;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class CipherConstant {
    public static final List<CipherDescription> STANDARD_JRE7_CIPHER_LIST = Arrays.asList("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,true",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,true",
            "TLS_RSA_WITH_AES_256_CBC_SHA256,true",
            "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,true",
            "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,true",
            "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,true",
            "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,true",
            "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,true",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,true",
            "TLS_RSA_WITH_AES_256_CBC_SHA,true",
            "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,true",
            "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,true",
            "TLS_DHE_RSA_WITH_AES_256_CBC_SHA,true",
            "TLS_DHE_DSS_WITH_AES_256_CBC_SHA,true",
            "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_RSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,true",
            "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,true",
            "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,true",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,true",
            "TLS_RSA_WITH_AES_128_CBC_SHA,true",
            "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,true",
            "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,true",
            "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,true",
            "TLS_DHE_DSS_WITH_AES_128_CBC_SHA,true",
            "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA,true",
            "TLS_ECDHE_RSA_WITH_RC4_128_SHA,true",
            "SSL_RSA_WITH_RC4_128_SHA,true",
            "TLS_ECDH_ECDSA_WITH_RC4_128_SHA,true",
            "TLS_ECDH_RSA_WITH_RC4_128_SHA,true",
            "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,true",
            "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,true",
            "SSL_RSA_WITH_3DES_EDE_CBC_SHA,true",
            "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,true",
            "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,true",
            "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,true",
            "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,true",
            "SSL_RSA_WITH_RC4_128_MD5,true",
            "TLS_EMPTY_RENEGOTIATION_INFO_SCSV2,true",
            "TLS_DH_anon_WITH_AES_256_CBC_SHA256,false",
            "TLS_ECDH_anon_WITH_AES_256_CBC_SHA,false",
            "TLS_DH_anon_WITH_AES_256_CBC_SHA,false",
            "TLS_DH_anon_WITH_AES_128_CBC_SHA256,false",
            "TLS_ECDH_anon_WITH_AES_128_CBC_SHA,false",
            "TLS_DH_anon_WITH_AES_128_CBC_SHA,false",
            "TLS_ECDH_anon_WITH_RC4_128_SHA,false",
            "SSL_DH_anon_WITH_RC4_128_MD5,false",
            "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA,false",
            "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA,false",
            "TLS_RSA_WITH_NULL_SHA256,false",
            "TLS_ECDHE_ECDSA_WITH_NULL_SHA,false",
            "TLS_ECDHE_RSA_WITH_NULL_SHA,false",
            "SSL_RSA_WITH_NULL_SHA,false",
            "TLS_ECDH_ECDSA_WITH_NULL_SHA,false",
            "TLS_ECDH_RSA_WITH_NULL_SHA,false",
            "TLS_ECDH_anon_WITH_NULL_SHA,false",
            "SSL_RSA_WITH_NULL_MD5,false",
            "SSL_RSA_WITH_DES_CBC_SHA,false",
            "SSL_DHE_RSA_WITH_DES_CBC_SHA,false",
            "SSL_DHE_DSS_WITH_DES_CBC_SHA,false",
            "SSL_DH_anon_WITH_DES_CBC_SHA,false",
            "SSL_RSA_EXPORT_WITH_RC4_40_MD5,false",
            "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5,false",
            "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA,false",
            "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA,false",
            "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA,false",
            "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA,false",
            "TLS_KRB5_WITH_RC4_128_SHA,false",
            "TLS_KRB5_WITH_RC4_128_MD5,false",
            "TLS_KRB5_WITH_3DES_EDE_CBC_SHA,false",
            "TLS_KRB5_WITH_3DES_EDE_CBC_MD5,false",
            "TLS_KRB5_WITH_DES_CBC_SHA,false",
            "TLS_KRB5_WITH_DES_CBC_MD5,false",
            "TLS_KRB5_EXPORT_WITH_RC4_40_SHA,false",
            "TLS_KRB5_EXPORT_WITH_RC4_40_MD5,false",
            "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA,false",
            "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5,false"
    ).stream().map(cipher -> {
        String[] split = cipher.split(",");
        return new CipherDescription(split[0], Boolean.valueOf(split[1]));
    }).collect(Collectors.<CipherDescription>toList());
}
